// <auto-generated />
using System;
using InternalBookingApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InternalBookingApp.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250716153948_ResourceDataPopulation")]
    partial class ResourceDataPopulation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InternalBookingApp.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BookedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("bit");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResourceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("InternalBookingApp.Models.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 20,
                            Description = "Main conference room with video conferencing",
                            IsAvailable = true,
                            Location = "Floor 1, West Wing",
                            Name = "Conference Room A"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 15,
                            Description = "Training room with projector and whiteboards",
                            IsAvailable = false,
                            Location = "Floor 2, East Wing",
                            Name = "Training Room B"
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 8,
                            Description = "Private meeting room for executive staff",
                            IsAvailable = true,
                            Location = "Floor 3, North Wing",
                            Name = "Executive Suite"
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 50,
                            Description = "Shared collaborative workspace",
                            IsAvailable = true,
                            Location = "Floor 1, Central Area",
                            Name = "Open Workspace"
                        },
                        new
                        {
                            Id = 5,
                            Capacity = 1,
                            Description = "Soundproof booth for private calls",
                            IsAvailable = true,
                            Location = "Floor 2, Near Elevators",
                            Name = "Phone Booth"
                        });
                });

            modelBuilder.Entity("InternalBookingApp.Models.Booking", b =>
                {
                    b.HasOne("InternalBookingApp.Models.Resource", "Resource")
                        .WithMany("Bookings")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("InternalBookingApp.Models.Resource", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
